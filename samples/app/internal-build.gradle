buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath dependency.spoonGradlePlugin
        classpath dependency.androidGradlePlugin
        classpath dependency.fabricGradlePlugin
    }
}

// Load API Key information in from property file
Properties props = new Properties()
File propsFile = file('fabric.properties')
if (propsFile.exists()) {
    props.load(propsFile.newDataInputStream())
} else if (System.env.TWITTER_KEY != null && System.env.TWITTER_SECRET != null) {
    props.setProperty("twitterConsumerKey", System.env.TWITTER_KEY)
    props.setProperty("twitterConsumerSecret", System.env.TWITTER_SECRET)
} else {
    throw new GradleException("Missing fabric.properties, check the fabric.properties.sample file.");
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'spoon'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.example.app.twitter"
        versionCode 1
        versionName "1.0"
        minSdkVersion rootProject.minSdkVersion.twitter
        targetSdkVersion rootProject.targetSdkVersion
        testInstrumentationRunner "com.example.app.SpoonInstrumentationTestRunner"
    }

    buildTypes {
        debug {
            buildConfigField "String", "CONSUMER_KEY", "\"${props.getProperty("twitterConsumerKey")}\""
            buildConfigField "String", "CONSUMER_SECRET", "\"${props.getProperty("twitterConsumerSecret")}\""
            buildConfigField "String", "MOPUB_AD_UNIT_ID", "\"${props.getProperty("mopubAdUnitId")}\""
        }
        release {
            buildConfigField "String", "CONSUMER_KEY", "\"${props.getProperty("twitterConsumerKey")}\""
            buildConfigField "String", "CONSUMER_SECRET", "\"${props.getProperty("twitterConsumerSecret")}\""
            buildConfigField "String", "MOPUB_AD_UNIT_ID", "\"${props.getProperty("mopubAdUnitId")}\""
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }

    spoon {
        if (project.hasProperty('spoonClassName')) {
            className = project.spoonClassName
        }
    }

    lintOptions {
        warningsAsErrors true
    }

    compileOptions {
        sourceCompatibility rootProject.sourceCompatibilityVersion
        targetCompatibility rootProject.targetCompatibilityVersion
    }
}

dependencies {
    debugCompile project(path: ':sdk:twitter:twitter', configuration: 'debug')
    debugCompile project(path: ':sdk:twitter:twitter-mopub', configuration: 'debug')
    releaseCompile project(path: ':sdk:twitter:twitter', configuration: 'release')
    releaseCompile project(path: ':sdk:twitter:twitter-mopub', configuration: 'release')

    compile dependency.appCompat
    compile dependency.design
    compile dependency.okHttpInterceptor
    debugCompile dependency.leakCanary
    releaseCompile dependency.leakCanaryNoOp

    androidTestCompile dependency.spoon
    androidTestCompile dependency.espresso
    androidTestCompile dependency.androidTestingSupport
}

task setupCi << {
    propsFile.write(
            "apiKey=$System.env.FABRIC_KEY\n" +
            "apiSecret=$System.env.FABRIC_SECRET\n"
    )
}
